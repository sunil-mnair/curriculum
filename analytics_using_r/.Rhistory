_HiStOrY_V2_
df = read_csv('bank_data_for_r.csv')
library(tidyverse) # Data Manipulation and Visualization
library(caTools)# Data Splitting
library(caret) # Prediction: Classification and Regression
library(ROCR) # Prediction: ROC Curve
library(rpart) # Prediction: Decision Tree
library(rpart.plot)
library(ggplot2)
df = read_csv('bank_data_for_r.csv')
setwd('/Users/sunilnair/Documents/ByteSize Trainings/curriculum/analytics_using_r')
df = read_csv('bank_data_for_r.csv')
head(df)
tail(df)
random(df)
sample(df)
sample(df)
sample(df)
sample(df)
help(select)
df %>% select(where(is.numeric))
table(df %>% select(where(is.numeric)))
df %>% select(where(is.numeric))
colnames(df %>% select(where(is.numeric)))
colnames(df %>% select(where(~ is.numeric)))
colnames(df %>% select(where(is.numeric)))
colnames(df %>% select(where(~is.numeric)))
colnames(df %>% select(where(~ is.numeric)))
colnames(df %>% selectif(is.numeric))
colnames(df %>% select_if(is.numeric))
colnames(df %>% select_if(!is.numeric))
colnames(df %>% select_if(is.na(is.numeric)))
colnames(df %>% select_if(is.na(as.numeric)))
colnames(df %>% !select_if(is.numeric))
colnames(df %>% select_if(is.numeric))
colnames(df %>% select_if(is.character)
colnames(df %>% select_if(is.character))
colnames(df %>% select_if(is_character()))
colnames(df %>% select_if(is_numeric)
colnames(df %>% select_if(is_numeric))
colnames(df %>% select_if(is.numeric))
df %>% distinct('Home Ownership')
table(df$'Home Ownership')
unique(df$'Home Ownership')
is.na(df)
is.na(df).sum()
sum(is.na(df))
df = read_csv('bank_data_for_r.csv')
sum(is.na(df))
summary(df)
table(is.na(df))
sapply(df, function(x) sum(is.na(x)))
df = read_csv('bank_data_for_r.csv')
summary(df)
colsum(is.na(df))
sum(is.na(df))
df %>% mutate_at(vars('Credit Score'), ~replace_na(., median(df$`Credit Score`)))
sum(is.na(df))
df = df %>% mutate_at(vars('Credit Score'), ~replace_na(., median(df$`Credit Score`)))
sum(is.na(df))
df = df %>% mutate('Credit Score' = coalesce('Credit Score',median(df$`Credit Score`)))
df = df %>% mutate(df$'Credit Score' = coalesce(df$'Credit Score',median(df$`Credit Score`)))
df = df %>% mutate(df$`Credit Score` = coalesce(df$`Credit Score`,median(df$`Credit Score`)))
df = df %>% mutate(coalesce(df$`Credit Score`,median(df$`Credit Score`)))
sum(is.na(df))
sapply(df, function(x) sum(is.na(x)))
df = df %>% mutate(df$`Credit Score` = coalesce(df$`Credit Score`,median(df$`Credit Score`)))
df = df %>% mutate(df$`Credit Score` <- coalesce(df$`Credit Score`,median(df$`Credit Score`)))
sum(is.na(df))
sapply(df, function(x) sum(is.na(x)))
df <- df %>% mutate(df$`Credit Score` <- coalesce(df$`Credit Score`,median(df$`Credit Score`)))
sum(is.na(df))
sapply(df, function(x) sum(is.na(x)))
median(df$`Credit Score`)
mean(df$`Credit Score`)
mean(df$`Credit Score`,na.rm=TRUE)
df <- df %>% mutate(df$`Credit Score` <- coalesce(df$`Credit Score`,mean(df$`Credit Score`,na.rm=TRUE)))
sapply(df, function(x) sum(is.na(x)))
df2 <- df %>% mutate(df$`Credit Score` <- coalesce(df$`Credit Score`,mean(df$`Credit Score`,na.rm=TRUE)))
df2 <- df %>% mutate(df$`Credit Score` = coalesce(df$`Credit Score`,mean(df$`Credit Score`,na.rm=TRUE)))
df <- df %>% mutate(df$`Credit Score` = coalesce(df$`Credit Score`,mean(df$`Credit Score`,na.rm=TRUE)))
df <- df %>% mutate(df$`Credit Score` <- coalesce(df$`Credit Score`,mean(df$`Credit Score`,na.rm=TRUE)))
sum(is.na(df))
sapply(df, function(x) sum(is.na(x)))
df <- df %>% mutate(df$`Credit Score` <- coalesce(df$`Credit Score`,0))
sapply(df, function(x) sum(is.na(x)))
df <- df %>%
mutate_at(c('Credit Score'), ~replace_na(.,0))
table(is.na(df))
sapply(df, function(x) sum(is.na(x)))
df = read_csv('bank_data_for_r.csv')
df <- df %>%
mutate_at(c('Credit Score'), ~replace_na(.,mean(df$`Credit Score`,na.rm=TRUE)))
sum(is.na(df))
median(df$`Credit Score`,na.rm=TRUE)
df = read_csv('bank_data_for_r.csv')
df <- df %>%
mutate_at('Credit Score', ~replace_na(.,mean(df$`Credit Score`,na.rm=TRUE)))
sum(is.na(df))
mode(df$`Home Ownership`)
mode(df$`Home Ownership`)[0]
getmode(df$`Home Ownership`)
df %>% select(-c('Loan ID','Customer ID'))
df
df = df %>% select(-c('Loan ID','Customer ID'))
df
df <- df %>%
mutate(`Home Ownership` = ifelse(`Home Ownership` == 'HaveMortgage','Home Mortgage'))
df <- df %>%
mutate(`Home Ownership` = ifelse(`Home Ownership` == 'HaveMortgage','Home Mortgage',))
df <- df %>%
mutate(`Home Ownership` = if(`Home Ownership` == 'HaveMortgage','Home Mortgage'))
df[df$`Home Ownership` == 'HaveMortgage']
df[df$`Home Ownership` == 'Home Mortgage']
df$`Home Ownership`[df$`Home Ownership` == 'Home Mortgage']
df$`Home Ownership`[df$`Home Ownership` == 'Home Mortgage'] = 'Have Mortgage'
table(df$'Home Ownership')
df <- df %>%
mutate(`Term` = ifelse(`Term` == 'Short Term',0,1))
df
df <- dummyVars(" ~ Home Ownership", data = df)
df <- dummyVars(" ~ `Home Ownership`", data = df)
df
df = read_csv('bank_data_for_r.csv')
dummy <- dummyVars(" ~ `Home Ownership`", data = df)
dummy_df <- data.frame(predict(dummy, newdata = df))
dummy_df
dummy
new = cbind(df,dummy_df)
names(new)
df = read_csv('bank_data_for_r.csv')
df <- dummy_cols(df, select_columns = "Home Ownership")
df <- dummy_columns(df, select_columns = "Home Ownership")
install.packages("fastdummies")
install.packages("fastDummies")
df <- dummy_columns(df, select_columns = "Home Ownership")
df <- fastDummies::dummy_columns(df, select_columns = "Home Ownership")
names(df)
ggplot(df, aes(x=`Loan Status`, y=`Credit Score`)) + geom_boxplot()
df = read_csv('bank_data_for_r.csv')
df <- fastDummies::dummy_columns(df, select_columns = c("Home Ownership","Purpose"))
names(df)
ggplot(df, aes(x=``, y=`Credit Score`)) + geom_boxplot()
ggplot(df, aes(x=`Loan Status`, y=``)) + geom_boxplot()
ggplot(df, aes(x=`Credir Score`, y=`Credit Score`)) + geom_boxplot()
ggplot(df, aes(x=`Credit Score`, y=`Credit Score`)) + geom_boxplot()
ggplot(df, aes(x=`Credit Score`)) + geom_boxplot()
ggplot(df, aes(y=`Credit Score`)) + geom_boxplot()
ggplot(df, aes(y=`Annual Income`)) + geom_boxplot()
ggplot(df, aes(y=`Current Loan Amount`)) + geom_boxplot()
df = read_csv('bank_data_for_r.csv')
summary(is.na(df))
ggplot(df, aes(y=c("Current Loan Amount")) + geom_boxplot()
ggplot(df, aes(y=c("Current Loan Amount","Annual Income")) + geom_boxplot()
ggplot(df, aes(y=c("Current Loan Amount","Annual Income")) + geom_boxplot()
boxplot(df[,c("Current Loan Amount","Annual Income")])
boxplot(df[,c("Current Loan Amount","Annual Income")])
boxplot(df[,c("Current Loan Amount","Annual Income","Credit Score")])
df = read_csv('bank_data_for_r.csv')
df <- df %>% mutate_at('Credit Score', ~replace_na(.,median(df$`Credit Score`,na.rm=TRUE)))
df <- df %>% select(-c('Loan Status','Loan ID','Customer ID'))
df$`Home Ownership`[df$`Home Ownership` == 'HaveMortgage'] = 'Home Mortgage'
df <- df %>%
mutate(`Term` = ifelse(`Term` == 'Short Term',0,1))
df <- fastDummies::dummy_columns(df, select_columns = c("Home Ownership","Purpose"))
set.seed(1)
#Use 70% of dataset as training set and remaining 30% as testing set
df_new <- df.split(df$Defaulter, SplitRatio = 0.7)
set.seed(1)
#Use 70% of dataset as training set and remaining 30% as testing set
sample <- sample.split(df$Defaulter, SplitRatio = 0.7)
train  <- subset(df_new, sample == TRUE)
sample <- sample.split(df$Defaulter, SplitRatio = 0.7)
train  <- subset(df, sample == TRUE)
test   <- subset(df, sample == FALSE)
head(train)
dim(test)
classifier = glm(Defaulter ~ .,
family = binomial, data = train)
classifier = step(classifier)
plot(classifier)
classifier = step(classifier)
classifier = glm(Defaulter ~ `Current Loan Amount` + Term + `Credit Score` + `Annual Income` +
`Home Ownership` + `Monthly Debt` + `Months since last delinquent`,
family = binomial, data = train)
classifier = step(classifier)
df <- df %>% select(-c('Home Ownership','Purpose'))
sample <- sample.split(df$Defaulter, SplitRatio = 0.7)
train  <- subset(df, sample == TRUE)
test   <- subset(df, sample == FALSE)
classifier = glm(Defaulter ~ .,
family = binomial, data = train)
classifier = step(classifier)
plot(classifier)
summary(classifier)
prob_pred <- predict(classifier, type = 'response', newdata = test)
y_pred <- ifelse(prob_pred > 0.5, 1, 0)
error <- mean(test$Defaulter != y_pred) # Misclassification Error
print('Accuracy',round(1-error,4))
print('Accuracy',1-error))
print('Accuracy',1-error)
error
print('Accuracy',1-error)
print(paste('Accuracy',1-error))
plot(classifier)
plot(classifier)
plot(classifier)
table(test$Defaulter, y_pred > 0.5)
table(test$Defaulter, y_pred)
example <- confusionMatrix(data=y_pred, reference = test$Defaulter)
example <- confusionMatrix(data=test$Defaulter, reference = test$Defaulter)
y_pred
test$Defaulter
class(test$Defaulter)
class(y_pred)
example <- confusionMatrix(data=test$Defaulter, reference = test$Defaulter)
example <- confusionMatrix(data=factor(test$Defaulter), reference = factor(test$Defaulter))
example
example <- confusionMatrix(data=factor(y_pred), reference = factor(test$Defaulter))
example
summary(classifier)
prob_pred
y_pred <- ifelse(prob_pred > 0.8, 1, 0)
error <- mean(test$Defaulter != y_pred)
print(paste('Accuracy',1-error))
example <- confusionMatrix(data=factor(y_pred), reference = factor(test$Defaulter))
example
prob_pred
